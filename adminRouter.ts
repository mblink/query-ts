/**
 * Generated by bondlink.routing.JavaScriptReverseRouter
 *
 * To add routes to this file, you must first add them to the action associated
 * with the URL: /admin/typescript-routes.
 *
 * To generate routes: curl --insecure -o /src/bondlink/web/admin/assets/scripts/adminRouter.ts https://dev.bondlink.org/admin/typescript-routes
 *
 */

import {Router} from "./router";

export class AdminRouter extends Router {

  static readonly admin = {
    "AdminBulkUploadController": {
      "index":  function(issuerId0:string) { return Router._wA({method: "GET", url: "/" + "admin/bulk-upload" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("issuerId", issuerId0)])}) }
      },
    "AdminController": {
      "accountStatus":  function(issuerId0:string) { return Router._wA({method: "POST", url: "/" + "admin/issuer/account-status/" + encodeURIComponent((function(k:string,v:string) {return v})("issuerId", issuerId0))}) },
      "allNotifications":  function() { return Router._wA({method: "GET", url: "/" + "admin/activity-notifications"}) },
      "buildCorporateProd":  function() { return Router._wA({method: "GET", url: "/" + "admin/build-corporate"}) },
      "cronJobs":  function() { return Router._wA({method: "GET", url: "/" + "admin/cron-jobs"}) },
      "deleteOfferingOverride":  function(id0:string) { return Router._wA({method: "POST", url: "/" + "admin/offerings/delete" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("id", id0)])}) },
      "editOverseenIssuers":  function(issuerId0:string) { return Router._wA({method: "GET", url: "/" + "admin/issuer/edit-oversight" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("issuerId", issuerId0)])}) },
      "editPaidForIssuers":  function(issuerId0:string) { return Router._wA({method: "GET", url: "/" + "admin/issuer/edit-paid-for" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("issuerId", issuerId0)])}) },
      "editPaymentSettings":  function(issuerId0:string) { return Router._wA({method: "GET", url: "/" + "admin/issuer/edit-payment-settings" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("issuerId", issuerId0)])}) },
      "featureFlags":  function(issuerId0:string) { return Router._wA({method: "GET", url: "/" + "admin/issuer/feature-flags" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("issuerId", issuerId0)])}) },
      "index":  function() { return Router._wA({method: "GET", url: "/" + "admin"}) },
      "issuerNotifications":  function(issuerId0:string) { return Router._wA({method: "GET", url: "/" + "admin/activity-notifications/issuer" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("issuerId", issuerId0)])}) },
      "offerings":  function() { return Router._wA({method: "GET", url: "/" + "admin/offerings"}) },
      "pauseCronJob":  function(name0:string) { return Router._wA({method: "POST", url: "/" + "admin/cron-jobs/pause/" + encodeURIComponent((function(k:string,v:string) {return v})("name", name0))}) },
      "preferOfferingOverride":  function() { return Router._wA({method: "POST", url: "/" + "admin/offerings/prefer"}) },
      "resumeCronJob":  function(name0:string) { return Router._wA({method: "POST", url: "/" + "admin/cron-jobs/resumt/" + encodeURIComponent((function(k:string,v:string) {return v})("name", name0))}) },
      "runCronJob":  function(name0:string) { return Router._wA({method: "POST", url: "/" + "admin/cron-jobs/run/" + encodeURIComponent((function(k:string,v:string) {return v})("name", name0))}) },
      "runWraith":  function(command0:string) { return Router._wA({method: "GET", url: "/" + "admin/run-wraith" + Router._qS([(function(k:string,v:string){return v!=null?(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})(k,v): ''})("command", command0)])}) },
      "usMap":  function() { return Router._wA({method: "GET", url: "/" + "admin/us-map"}) },
      "userNotifications":  function(userId0:string) { return Router._wA({method: "GET", url: "/" + "admin/activity-notifications/user" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("userId", userId0)])}) },
      "visualDiff":  function() { return Router._wA({method: "GET", url: "/" + "visual-diff"}) }
      },
    "AdminDomainController": {
      "associateWithIssuerModal":  function(zoneId0:string) { return Router._wA({method: "GET", url: "/" + "admin/domain/associate-issuer" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("zoneId", zoneId0)])}) },
      "configureServersModal":  function(zoneId0:string) { return Router._wA({method: "GET", url: "/" + "admin/domain/configure-servers" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("zoneId", zoneId0)])}) },
      "configureServersPost":  function() { return Router._wA({method: "POST", url: "/" + "admin/domain/configure-servers"}) },
      "deleteParkedDomain":  function(zoneId0:string) { return Router._wA({method: "POST", url: "/" + "admin/domain/delete-parked-domain" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("zoneId", zoneId0)])}) },
      "domainSearch":  function() { return Router._wA({method: "GET", url: "/" + "admin/domain/search"}) },
      "domainSearchPost":  function() { return Router._wA({method: "POST", url: "/" + "admin/domain/search"}) },
      "index":  function() { return Router._wA({method: "GET", url: "/" + "admin/domain/index"}) },
      "parkedDomainsModal":  function(zoneId0:string) { return Router._wA({method: "GET", url: "/" + "admin/domain/configure-parked" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("zoneId", zoneId0)])}) },
      "registerDomain":  function() { return Router._wA({method: "POST", url: "/" + "admin/domain/register-domain"}) },
      "registerDomainModal":  function(domain0:string) { return Router._wA({method: "GET", url: "/" + "admin/domain/register-domain" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("domain", domain0)])}) },
      "showIssuersForZone":  function(domain0:string) { return Router._wA({method: "GET", url: "/" + "admin/domain/issuers-shared-domain" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("domain", domain0)])}) },
      "viewZoneData":  function(zoneId0:string) { return Router._wA({method: "GET", url: "/" + "admin/domain/hosted-zone" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("zoneId", zoneId0)])}) }
      },
    "AdminUsersController": {
      "delete":  function(userId0:string) { return Router._wA({method: "POST", url: "/" + "admin/users/" + encodeURIComponent((function(k:string,v:string) {return v})("userId", userId0)) + "/delete"}) },
      "edit":  function(userId0:string) { return Router._wA({method: "GET", url: "/" + "admin/users/" + encodeURIComponent((function(k:string,v:string) {return v})("userId", userId0))}) },
      "editPassword":  function(userId0:string) { return Router._wA({method: "GET", url: "/" + "admin/users/" + encodeURIComponent((function(k:string,v:string) {return v})("userId", userId0)) + "/password"}) },
      "index":  function() { return Router._wA({method: "GET", url: "/" + "admin/users"}) },
      "loginAs":  function(userId0:string) { return Router._wA({method: "POST", url: "/" + "admin/users/" + encodeURIComponent((function(k:string,v:string) {return v})("userId", userId0)) + "/login"}) },
      "restore":  function(userId0:string) { return Router._wA({method: "POST", url: "/" + "admin/users/" + encodeURIComponent((function(k:string,v:string) {return v})("userId", userId0)) + "/restore"}) }
      },
    "AnalyticsController": {
      "trafficAnalysis":  function() { return Router._wA({method: "GET", url: "/" + "admin/analytics/traffic-analysis"}) },
      "trafficAnalysisDt":  function() { return Router._wA({method: "POST", url: "/" + "admin/analytics/traffic-analysis-dt"}) }
      },
    "BondLinkIssuerTermsController": {
      "delete":  function(issuerId0:string,id1:string) { return Router._wA({method: "POST", url: "/" + "admin/issuer-terms/" + encodeURIComponent((function(k:string,v:string) {return v})("issuerId", issuerId0)) + "/" + encodeURIComponent((function(k:string,v:string) {return v})("id", id1)) + "/delete"}) },
      "index":  function(issuerId0:string) { return Router._wA({method: "GET", url: "/" + "admin/issuer-terms" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("issuerId", issuerId0)])}) }
      },
    "FilesController": {
      "delete":  function(id0:string) { return Router._wA({method: "POST", url: "/" + "admin/files/delete/" + encodeURIComponent((function(k:string,v:string) {return v})("id", id0))}) },
      "edit":  function(id0:string) { return Router._wA({method: "GET", url: "/" + "admin/files/edit/" + encodeURIComponent((function(k:string,v:string) {return v})("id", id0))}) },
      "index":  function() { return Router._wA({method: "GET", url: "/" + "admin/files"}) },
      "sendModal":  function(id0:string,getUsers1:string) { return Router._wA({method: "GET", url: "/" + "admin/files/send" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("id", id0), (function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("getUsers", getUsers1)])}) },
      "show":  function(id0:string) { return Router._wA({method: "GET", url: "/" + "admin/files/show" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("id", id0)])}) }
      },
    "InvoiceController": {
      "_dataTable":  function(issuerId0:string) { return Router._wA({method: "GET", url: "/" + "admin/invoices/datatable" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("issuerId", issuerId0)])}) },
      "delete":  function(issuerId0:string,id1:string) { return Router._wA({method: "POST", url: "/" + "admin/delete-invoice" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("issuerId", issuerId0), (function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("id", id1)])}) },
      "edit":  function(issuerId0:string,id1:string) { return Router._wA({method: "GET", url: "/" + "admin/invoices/edit/" + encodeURIComponent((function(k:string,v:string) {return v})("issuerId", issuerId0)) + "/" + encodeURIComponent((function(k:string,v:string) {return v})("id", id1))}) },
      "index":  function(issuerId0:string) { return Router._wA({method: "GET", url: "/" + "admin/invoices" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("issuerId", issuerId0)])}) },
      "send":  function(issuerId0:string,id1:string) { return Router._wA({method: "GET", url: "/" + "admin/send/invoice" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("issuerId", issuerId0), (function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("id", id1)])}) }
      },
    "PaymentsController": {
      "editFeeTierGroup":  function(id0:string) { return Router._wA({method: "GET", url: "/" + "admin/fee-tiers/" + encodeURIComponent((function(k:string,v:string) {return v})("id", id0))}) },
      "feeTierGroups":  function() { return Router._wA({method: "GET", url: "/" + "admin/fee-tiers"}) },
      "intake":  function(issuerId0:string) { return Router._wA({method: "GET", url: "/" + "admin/issuer/sales-intake" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("issuerId", issuerId0)])}) },
      "plans":  function() { return Router._wA({method: "GET", url: "/" + "admin/plans"}) },
      "postPlan":  function() { return Router._wA({method: "POST", url: "/" + "admin/plans"}) }
      },
    "RoadShowsController": {
      "_dataTable":  function(issuerId0:string) { return Router._wA({method: "GET", url: "/" + "admin/road-shows/datatable" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("issuerId", issuerId0)])}) },
      "delete":  function(issuerId0:string,id1:string) { return Router._wA({method: "POST", url: "/" + "admin/delete-road-show" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("issuerId", issuerId0), (function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("id", id1)])}) },
      "edit":  function(issuerId0:string,id1:string) { return Router._wA({method: "GET", url: "/" + "admin/road-shows/edit/" + encodeURIComponent((function(k:string,v:string) {return v})("issuerId", issuerId0)) + "/" + encodeURIComponent((function(k:string,v:string) {return v})("id", id1))}) },
      "index":  function(issuerId0:string) { return Router._wA({method: "GET", url: "/" + "admin/road-shows" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("issuerId", issuerId0)])}) }
      },
    "ShortUrlsController": {
      "delete":  function(issuerId0:string,id1:string) { return Router._wA({method: "POST", url: "/" + "admin/short-urls/delete/" + encodeURIComponent((function(k:string,v:string) {return v})("issuerId", issuerId0)) + "/" + encodeURIComponent((function(k:string,v:string) {return v})("id", id1))}) },
      "index":  function(issuerId0:string) { return Router._wA({method: "GET", url: "/" + "admin/short-urls" + Router._qS([(function(k:string,v:string) {return encodeURIComponent(k)+'='+encodeURIComponent(v)})("issuerId", issuerId0)])}) }
      }
    };
}
